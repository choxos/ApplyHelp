# Generated by Django 5.2.5 on 2025-08-31 23:44

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="KurdishDialect",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name_sorani",
                    models.CharField(max_length=100, verbose_name="Name (Sorani)"),
                ),
                (
                    "name_kurmanji",
                    models.CharField(max_length=100, verbose_name="Name (Kurmanji)"),
                ),
                (
                    "name_english",
                    models.CharField(max_length=100, verbose_name="Name (English)"),
                ),
                (
                    "code",
                    models.CharField(
                        max_length=10, unique=True, verbose_name="Language Code"
                    ),
                ),
            ],
            options={
                "verbose_name": "Kurdish Dialect",
                "verbose_name_plural": "Kurdish Dialects",
            },
        ),
        migrations.CreateModel(
            name="KurdishUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "kurdish_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Kurdish Name"
                    ),
                ),
                (
                    "region",
                    models.CharField(
                        choices=[
                            ("rojhelat", "Rojhelat"),
                            ("bashur", "Başûr"),
                            ("bakur", "Bakûr"),
                            ("rojava", "Rojava"),
                            ("diaspora", "Diaspora"),
                        ],
                        max_length=20,
                        verbose_name="Kurdish Region",
                    ),
                ),
                (
                    "current_education_level",
                    models.CharField(
                        choices=[
                            ("bachelor", "Bachelor's Degree"),
                            ("master", "Master's Degree"),
                            ("phd", "PhD"),
                            ("professional", "Professional Degree"),
                        ],
                        max_length=20,
                        verbose_name="Current Education Level",
                    ),
                ),
                (
                    "university_name",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        verbose_name="Current/Previous University",
                    ),
                ),
                (
                    "field_of_study",
                    models.CharField(max_length=200, verbose_name="Field of Study"),
                ),
                (
                    "graduation_year",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Graduation Year"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Phone Number"
                    ),
                ),
                (
                    "current_city",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Current City"
                    ),
                ),
                (
                    "current_country",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Current Country"
                    ),
                ),
                (
                    "preferred_study_level",
                    models.CharField(
                        choices=[
                            ("bachelor", "Bachelor's Degree"),
                            ("master", "Master's Degree"),
                            ("phd", "PhD"),
                            ("professional", "Professional Degree"),
                        ],
                        max_length=20,
                        verbose_name="Preferred Study Level",
                    ),
                ),
                (
                    "research_interests",
                    models.TextField(blank=True, verbose_name="Research Interests"),
                ),
                (
                    "profile_completed",
                    models.BooleanField(
                        default=False, verbose_name="Profile Completed"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "kurdish_dialects",
                    models.ManyToManyField(
                        blank=True,
                        to="accounts.kurdishdialect",
                        verbose_name="Kurdish Dialects Spoken",
                    ),
                ),
            ],
            options={
                "verbose_name": "Kurdish User",
                "verbose_name_plural": "Kurdish Users",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("biography", models.TextField(blank=True, verbose_name="Biography")),
                (
                    "motivation_letter",
                    models.TextField(
                        blank=True, verbose_name="General Motivation Letter"
                    ),
                ),
                (
                    "gpa",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=4,
                        null=True,
                        verbose_name="GPA",
                    ),
                ),
                (
                    "academic_awards",
                    models.TextField(blank=True, verbose_name="Academic Awards"),
                ),
                (
                    "publications",
                    models.TextField(blank=True, verbose_name="Publications"),
                ),
                (
                    "work_experience",
                    models.TextField(blank=True, verbose_name="Work Experience"),
                ),
                (
                    "volunteer_experience",
                    models.TextField(blank=True, verbose_name="Volunteer Experience"),
                ),
                (
                    "technical_skills",
                    models.TextField(blank=True, verbose_name="Technical Skills"),
                ),
                (
                    "language_skills",
                    models.TextField(blank=True, verbose_name="Language Skills"),
                ),
                (
                    "cv_document",
                    models.FileField(
                        blank=True, upload_to="cvs/", verbose_name="CV Document"
                    ),
                ),
                (
                    "transcripts",
                    models.FileField(
                        blank=True,
                        upload_to="transcripts/",
                        verbose_name="Academic Transcripts",
                    ),
                ),
                (
                    "certificates",
                    models.FileField(
                        blank=True,
                        upload_to="certificates/",
                        verbose_name="Certificates",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Profile",
                "verbose_name_plural": "User Profiles",
            },
        ),
    ]
